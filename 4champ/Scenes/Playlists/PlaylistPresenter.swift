//
//  PlaylistPresenter.swift
//  4champ
//
//  Created by Aleksi Sitomaniemi on 15.3.2020.
//  Copyright Â© 2020 Aleksi Sitomaniemi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PlaylistPresentationLogic {
  func presentPlaylist(response: Playlists.Select.Response)
  func presentModeChange(shuffled: Bool)
}

class PlaylistPresenter: PlaylistPresentationLogic {
  weak var viewController: PlaylistDisplayLogic?

  func presentPlaylist(response: Playlists.Select.Response) {
    let pl = response.selectedPlaylist
    let shuffle = (pl.playmode?.intValue ?? 0) == 1

    var mods: [MMD] = []
    pl.modules?.forEach {
      if let modInfo = $0 as? ModuleInfo {
        mods.append(MMD(cdi: modInfo))
      }
    }

    let name: String
    if pl.plId == "default" {
      name = "PlaylistView_DefaultPlaylist".l13n()
    } else {
      name = pl.plName ?? "<no name>"
    }

    let vm = Playlists.Select.ViewModel(playlistName: name, shuffle: shuffle, modules: mods)
    DispatchQueue.main.async {
      self.viewController?.displayPlaylist(viewModel: vm)
    }
  }

  func presentModeChange(shuffled: Bool) {
    DispatchQueue.main.async {
      self.viewController?.displayModeChange(shuffled: shuffled)
    }
  }
}
